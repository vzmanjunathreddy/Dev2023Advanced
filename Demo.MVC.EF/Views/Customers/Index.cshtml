@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model IPagedList<Demo.MVC.EF.Models.CustomersDTO>

@{
    ViewData["Title"] = "Index";
}


<p>
    <a asp-action="Create" asp-controller="Customers" type="button" class="btn btn-success"> Create </a>
</p>






<table class="table table-striped" style="border: 1px solid lightgrey;"> 
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Name")
            </th>
            <th >
                @Html.DisplayName("City")
         
            </th>
            <th >
                @Html.DisplayName("Contact")
                
            </th>
            <th>
                @Html.DisplayName("Email")
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Contact)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                    <div class="d-grid gap-2 d-md-block">

                        <a asp-action="Create" asp-controller="Customers" type="button" class="btn btn-success"> Create </a>
                        <a asp-action="Edit" asp-controller="Customers" type="button" class="btn btn-primary"> Edit </a>
                        <a asp-action="Edit" asp-controller="Customers" type="button" class="btn btn-info"> Details </a>
                    </div>

            </td>
        </tr>
}
    </tbody>
</table>
 

@Html.PagedListPager((IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("Index", new { page = page }),
    new PagedListRenderOptions {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
})
